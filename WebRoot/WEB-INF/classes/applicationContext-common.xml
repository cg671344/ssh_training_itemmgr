<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
<!-- 
<beans xmlns="http://www.springframework.org/schema/beans"
	     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	     xmlns:aop="http://www.springframework.org/schema/aop"
	     xmlns:tx="http://www.springframework.org/schema/tx"
	     xsi:schemaLocation="
	    	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">
      -->      
           
           <context:property-placeholder location="classpath:jdbc.properties" />
	<!--
			Uses Apache Commons DBCP for connection pooling. See Commons DBCP
			documentation for the required JAR files. Alternatively you can use
			another connection pool such as C3P0, similarly configured using
			Spring.
		-->
	<!-- 
			<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
			destroy-method="close" p:driverClassName="${jdbc.driverClassName}"
			p:url="${jdbc.url}" p:username="${jdbc.username}"
			p:password="${jdbc.password}" />
		-->
	<!-- JNDI DataSource for JEE environments -->
	<!--
			<jee:jndi-lookup id="dataSource"
			jndi-name="java:comp/env/jdbc/eblue"/>

		-->
	
	<bean id="dataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass"
			value="${jdbc.driverClassName}" />
		<property name="jdbcUrl"
			value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="minPoolSize" value="5" />
		<property name="acquireIncrement" value="5" />
		<property name="maxPoolSize" value="10" />
	</bean>
	
	<!-- Hibernate SessionFactory -->
	<!--
			class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
		-->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"
		p:dataSource-ref="dataSource">
		<property name="configLocations">
			<list>
				<value>classpath:hibernate.cfg.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					${hibernate.dialect}
				</prop>
				<prop key="hibernate.show_sql">
					${hibernate.show_sql}
				</prop>
				<prop key="hibernate.generate_statistics">
					${hibernate.generate_statistics}
				</prop>
			</props>
		</property>
		<property name="eventListeners">
			<map>
				<entry key="merge">
					<bean
						class="org.springframework.orm.hibernate3.support.IdTransferringMergeEventListener" />
				</entry>
			</map>
		</property>
	</bean>
		<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory" />
	<!--
			Transaction manager that delegates to JTA (for a transactional JNDI
			DataSource)
		-->
	<!--
			<bean id="transactionManager"
			class="org.springframework.transaction.jta.JtaTransactionManager"/>
		-->
	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
		<tx:annotation-driven transaction-manager="transactionManager" />

	<!--
			========================= BUSINESS OBJECT DEFINITIONS
			=========================
		-->
	<context:component-scan base-package="com.bjsxt.drp.business.itemmgr" />
	<!-- 配置sessionFactory -->
	
	<!--  
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="configLocation">
			<value>classpath:hibernate.cfg.xml</value>
		</property>	
	</bean>           
	-->
	<!-- 配置事务管理器 -->
	<!--  
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory"/>
		</property>	
	</bean>
	-->
	<!-- 配置事务的传播特性 -->
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="del*" propagation="REQUIRED"/>
			<tx:method name="modify*" propagation="REQUIRED"/>
			<tx:method name="*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- 那些类的哪些方法参与事务 --> 
	<aop:config>
		<aop:pointcut id="allManagerMethod" expression="execution(* com.bjsxt.drp.business.itemmgr.manager.*.*(..))"/>
		<aop:advisor pointcut-ref="allManagerMethod" advice-ref="txAdvice"/>
	</aop:config>
</beans>
